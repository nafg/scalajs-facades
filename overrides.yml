mui.base:
  common:
    style:
      type: jsObject
    onClick:
      type:
        args:
          - ReactMouseEventFromHtml
        result: callback
  components:
    ClickAwayListener:
      props:
        children:
          required: true
          type: vdomElement
        onClickAway:
          type:
            args: [ ]
            result: callback

mui:
  common:
    style:
      type: jsObject
    onClick:
      type:
        args:
          - ReactMouseEventFromHtml
        result: callback
  components:
    .system:
      props:
        alignItems:
          type:
            base: string
            presets:
              - string: flex-start
              - string: flex-end
              - string: center
              - string: stretch
              - string: baseline
        color:
          type:
            base: string
            presets:
              - string: primary.main
              - string: secondary.main
              - string: error.main
              - string: warning.main
              - string: info.main
              - string: success.main
              - string: text.primary
              - string: text.secondary
              - string: text.disabled
        display:
          type:
            base: string
            presets:
              - string: block
              - string: inline
        justifyContent:
          type:
            base: string
            presets:
              - string: flex-start
              - string: flex-end
              - string: center
              - string: space-between
              - string: space-around
              - string: space-evenly
    Alert:
      props:
        icon:
          type:
            base:
              anyOf:
                - bool
                - vdomNode
            presets: [ false ]
    Autocomplete:
      props:
        filterOptions:
          type:
            args:
              - arrayOf: jsAny
              - jsObject
            result:
              arrayOf: jsAny
        getOptionLabel:
          type:
            args:
              - jsAny
            result: string
        isOptionEqualToValue:
          type:
            args:
              - jsAny
              - jsAny
            result: bool
        onChange:
          type:
            args:
              - ReactEvent
              - jsAny
            result: callback
        onInputChange:
          type:
            args:
              - ReactEvent
              - string
              - string
            result: callback
        renderInput:
          type:
            args:
              - jsDictionary
            result: vdomNode
        renderOption:
          type:
            args: [ jsObject, jsAny, jsObject, jsObject ]
            result: vdomNode
    Breadcrumbs:
      moduleTrait: FacadeModule.ArrayChildren
    ButtonGroup:
      moduleTrait: FacadeModule.ArrayChildren
    Card:
      extends: Paper
      props:
        raised:
          type: bool
    Chip:
      props:
        onDelete:
          type:
            args: [ ReactMouseEvent ]
            result: callback
    Container:
      props:
        children:
          type: vdomNode
        classes:
          type: jsObject
        component:
          type: elementType
        disableGutters:
          type: bool
        fixed:
          type: bool
        maxWidth:
          type:
            base:
              anyOf:
                - string
                - bool
            presets:
              - string: xs
              - string: sm
              - string: md
              - string: lg
              - string: xl
              - false
    Dialog:
      props:
        onClose:
          type:
            args:
              - ReactEvent
              - string
            result: callback
    Icon:
      props:
        fontSize:
          type:
            base: string
            presets:
              - string: inherit
              - string: large
              - string: medium
              - string: small
    Fade:
      props:
        children:
          required: true
          type: vdomElement
    Grid:
      extends: .system
    IconButton:
      props:
        children:
          type: vdomNode
    InputBase:
      props:
        onChange:
          type:
            args:
              - ReactEventFromInput
            result: callback
    Link:
      extends: Typography
    List:
      moduleTrait: FacadeModule.ArrayChildren
    ListItem:
      props:
        children:
          type: vdomNode
    Menu:
      props:
        anchorEl:
          type:
            anyOf:
              - element
              - args:
                  - jsObject
                result: element
        onClose:
          type:
            args:
              - ReactEvent
              - string
            result: callback
    OutlinedInput:
      props:
        onChange:
          type:
            args:
              - ReactEventFromInput
            result: callback
    Paper:
      props:
        elevation:
          type: int
    Popper:
      props:
        anchorEl:
          type:
            anyOf:
              - element
              - jsObject
              - args:
                  - jsObject
                result:
                  anyOf:
                    - element
                    - jsObject
    RadioGroup:
      extends: FormGroup
    Select:
      props:
        renderValue:
          type:
            args:
              - jsAny
            result: vdomNode
    TableCell:
      props:
        padding:
          type:
            base: string
            presets:
              - string: normal
              - string: checkbox
              - string: none
    TablePagination:
      props:
        page:
          type: int
        count:
          type: int
        rowsPerPage:
          type: int
        onPageChange:
          type:
            args:
              - ReactEvent
              - int
            result: callback
    Tabs:
      props:
        onChange:
          type:
            args:
              - ReactEvent
              - jsAny
            result: callback
    TextField:
      props:
        onChange:
          type:
            args:
              - ReactEventFromInput
            result: callback
        children:
          type: vdomNode
    ToggleButtonGroup:
      moduleTrait: FacadeModule.ArrayChildren
      props:
        onChange:
          type:
            args:
              - ReactEvent
              - jsAny
            result: callback
    Tooltip:
      props:
        children:
          type: vdomElement
          required: true
    Typography:
      extends: .system

mui.lab:
  common:
    style:
      type: jsObject
    onClick:
      type:
        args:
          - ReactMouseEventFromHtml
        result: callback
